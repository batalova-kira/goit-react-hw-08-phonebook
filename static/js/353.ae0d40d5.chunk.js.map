{"version":3,"file":"static/js/353.ae0d40d5.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactCard/ContactCard.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactCard/ContactCard.jsx","components/ContactList/ContactList.styled.js","components/ContactList/Contactlist.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Form, ErrorMessage, Field } from \"formik\";\n\nexport const StyledForm = styled(Form)`\ndisplay: flex;\nflex-direction: column;\ngap: ${p => p.theme.spacing(2)};\npadding: ${p => p.theme.spacing(3)};\n`;\n\nexport const ErrMessage = styled(ErrorMessage)`\ncolor: ${p => p.theme.colors.red};\n`\n\nexport const Input = styled(Field)`\nmax-width: 380px;\nfont-size:18px;\n  padding:10px 10px 10px 5px;\n  display:block;\n  border:none;\n  border-bottom: 1px solid ${p => p.theme.colors.teal};\n\n  &:focus, &:hover, &:active\t{ \n    outline: 0;\n    outline-offset: 0;\n    border:none;\n  border-bottom: 2px solid ${p => p.theme.colors.teal} }\n`","import styled from \"styled-components\";\n\nexport const CardWrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap: ${p => p.theme.spacing(2)};\n`\n\nexport const BtnClose = styled.button`\ndisplay: inline-block;\nwidth: 150px;\n\tpadding: ${p => p.theme.spacing(2)} ${p => p.theme.spacing(4)};\n\tborder-radius: ${p => p.theme.radii.lg};\n\tcolor: #fff;\n\ttext-transform: uppercase;\n\tfont-size: .85rem;\n\tletter-spacing: .15rem;\n\ttransition: all .3s;\n\tposition: relative;\n\toverflow: hidden;\n\tz-index: 1;\n\t&:after {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground-color: ${p => p.theme.colors.teal};\n\t\tborder-radius: 10rem;\n\t\tz-index: -2;\n\t}\n\t&:before {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\twidth: 0%;\n\t\theight: 100%;\n\t\tbackground-color: ${p => p.theme.colors.darkTeal};\n\t\ttransition: all .3s;\n\t\tborder-radius: 10rem;\n\t\tz-index: -1;\n\t}\n\t&:hover {\n\t\tcolor: #fff;\n\t\t&:before {\n\t\t\twidth: 100%;\n\t\t}\n\t}\n`\n\nexport const Info = styled.p`\nfont-size: 20px;\nfont-weight: 500;\nletter-spacing: -0.05em;\n`","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  if (filter.trim() === '') {\n    return contacts;\n  }\n\n  return contacts.filter(item => {\n    return item.name.toLowerCase().includes(filter.toLowerCase());\n  });\n};\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { ErrMessage, Input, StyledForm } from './ContactForm.styled';\nimport { BtnClose } from 'components/ContactCard/ContactCard.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operation';\n\nconst contactSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('This field is required!'),\n  number: Yup.string().min(8, 'Too Short!').required('This field is required!'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onAddContact = newContact => {\n    const hasContact = contacts.some(\n      ({ name }) => name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (hasContact) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    }\n    const finalContact = {\n      ...newContact,\n    };\n    dispatch(addContact(finalContact));\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={contactSchema}\n      onSubmit={(values, actions) => {\n        onAddContact(values);\n        actions.resetForm({\n          values: {\n            name: '',\n            number: '',\n          },\n        });\n      }}\n    >\n      <StyledForm>\n        <label htmlFor=\"name\">Name</label>\n        <Input name=\"name\" placeholder=\"Please enter your name\" />\n        <ErrMessage name=\"name\" component=\"div\" />\n\n        <label htmlFor=\"number\">Number</label>\n        <Input\n          name=\"number\"\n          placeholder=\"Please enter your number\"\n          type=\"text\"\n        />\n        <ErrMessage name=\"number\" component=\"div\" />\n\n        <BtnClose type=\"submit\">Add contact</BtnClose>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import React from 'react';\nimport { BtnClose, CardWrapper, Info } from './ContactCard.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operation';\n\nconst ContactCard = ({ contact: { name, number, id } }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <CardWrapper>\n      <Info>{name}</Info>\n      <Info>{number}</Info>\n      <BtnClose onClick={() => dispatch(deleteContact(id))}>Delete</BtnClose>\n    </CardWrapper>\n  );\n};\n\nexport default ContactCard;\n","import styled from \"styled-components\";\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\nflex-direction: column;\ngap: ${p => p.theme.spacing(5)};\n`\n\nexport const ContactItem = styled.li`\nmax-width: 400px;\npadding: ${p => p.theme.spacing(5)};\n background: ${p => p.theme.colors.white};\nbox-shadow: 0 2px 5px rgba(0, 0, 0, 0.4);\nborder-bottom: 1px solid ${p => p.theme.colors.lightGrey};\nborder-radius: 2px;\ntransition: all 0.3s ease-out;\n&:hover {\n         transform: scale(1.1);\n       }`","import ContactCard from 'components/ContactCard/ContactCard';\nimport React from 'react';\nimport { ContactItem, List } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {contacts.map(item => (\n        <ContactItem key={item.id}>\n          <ContactCard contact={item} />\n        </ContactItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from \"styled-components\";\n\nexport const InputFilter = styled.input`\nmax-width: 380px;\nfont-size:18px;\n  padding:10px 10px 10px 5px;\n  display:block;\n  border:none;\n  border-bottom: 1px solid ${p => p.theme.colors.teal};\n\n  &:focus, &:hover, &:active\t{ \n    outline: 0;\n    outline-offset: 0;\n    border:none;\n  border-bottom: 2px solid ${p => p.theme.colors.teal} }\n`","import { useDispatch, useSelector } from 'react-redux';\nimport { InputFilter } from './Filter.styled';\nimport { onChangeFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <div>\n      <h3>Find contacts by name</h3>\n      <InputFilter\n        type=\"text\"\n        value={filter}\n        onChange={e => {\n          dispatch(onChangeFilter(e.target.value));\n        }}\n        placeholder=\"Enter name...\"\n      />\n    </div>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/Contactlist';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operation';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","p","theme","spacing","ErrMessage","ErrorMessage","_templateObject2","colors","red","Input","Field","_templateObject3","teal","CardWrapper","BtnClose","radii","lg","darkTeal","Info","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","trim","item","name","toLowerCase","includes","contactSchema","Yup","shape","min","max","required","number","ContactForm","useSelector","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","newContact","some","_ref","alert","concat","finalContact","_objectSpread","addContact","onAddContact","resetForm","children","_jsxs","htmlFor","placeholder","component","type","_ref$contact","contact","id","onClick","deleteContact","List","ContactItem","white","lightGrey","map","ContactCard","InputFilter","Filter","value","onChange","e","onChangeFilter","target","Contacts","useEffect","fetchContacts","_Fragment","ContactList"],"sourceRoot":""}