{"version":3,"file":"static/js/414.846e8f2b.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactCard/ContactCard.jsx","components/ContactList/ContactList.styled.js","components/ContactList/Contactlist.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  if (filter.trim() === '') {\n    return contacts;\n  }\n\n  return contacts.filter(item => {\n    return item.name.toLowerCase().includes(filter.toLowerCase());\n  });\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled(Field)`\n  max-width: 380px;\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  margin-bottom: 16px;\n  display: block;\n  border: 1px solid #16b3cf;\n  border-radius: 4px;\n  &:focus,\n  &:hover,\n  &:active {\n    outline: 0;\n    outline-offset: 0;\n    border: none;\n  }\n`;\n","import { ErrorMessage, Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from 'redux/contacts/operation';\nimport { Button } from '@mui/material';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { Input, StyledForm } from './ContactForm.styled';\n\nconst contactSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('This field is required!'),\n  number: Yup.string().min(8, 'Too Short!').required('This field is required!'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onAddContact = newContact => {\n    const hasContact = contacts.some(\n      ({ name }) => name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (hasContact) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    }\n    const finalContact = {\n      ...newContact,\n    };\n    dispatch(addContact(finalContact));\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={contactSchema}\n      onSubmit={(values, actions) => {\n        onAddContact(values);\n        actions.resetForm({\n          values: {\n            name: '',\n            number: '',\n          },\n        });\n      }}\n    >\n      <StyledForm>\n        <label htmlFor=\"name\">Name</label>\n        <Input name=\"name\" placeholder=\"Please enter your name\" />\n        <ErrorMessage name=\"name\" component=\"div\" />\n\n        <label htmlFor=\"number\">Number</label>\n        <Input\n          name=\"number\"\n          placeholder=\"Please enter your number\"\n          type=\"text\"\n        />\n        <ErrorMessage name=\"number\" component=\"div\" />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          size=\"small\"\n          sx={{\n            backgroundColor: 'secondary.main',\n            mb: 2,\n            width: '30%',\n            ':hover': {\n              backgroundColor: 'secondary.dark',\n            },\n          }}\n        >\n          Add contact\n        </Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operation';\nimport { Button, Card, CardContent, Typography } from '@mui/material';\n\nconst ContactCard = ({ contact: { name, number, id } }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Card sx={{ mb: 4 }}>\n      <CardContent>\n        <Typography\n          component=\"h5\"\n          sx={{\n            color: 'primary.darker',\n\n            fontWeight: 600,\n            textAlign: 'start',\n          }}\n        >\n          {name}\n        </Typography>\n        <Typography\n          component=\"h5\"\n          sx={{\n            color: 'primary.darker',\n            fontWeight: 400,\n            textAlign: 'start',\n            mb: 1,\n          }}\n        >\n          {number}\n        </Typography>\n        <Button\n          size=\"small\"\n          sx={{\n            color: 'primary.contrastText',\n            backgroundColor: 'secondary.main',\n            width: '30%',\n            ':hover': {\n              color: 'primary.contrastText',\n              backgroundColor: 'secondary.dark',\n            },\n          }}\n          onClick={() => dispatch(deleteContact(id))}\n        >\n          Delete\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ContactCard;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n`;\n\nexport const ContactItem = styled.li`\n  max-width: 400px;\n\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.4);\n  border-radius: 2px;\n  transition: all 0.3s ease-out;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n","import ContactCard from 'components/ContactCard/ContactCard';\nimport React from 'react';\nimport { ContactItem } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul>\n      {contacts.map(item => (\n        <ContactItem key={item.id}>\n          <ContactCard contact={item} />\n        </ContactItem>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { onChangeFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { TextField, Typography } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <div>\n      <Typography\n        component=\"h4\"\n        sx={{\n          color: 'primary.darker',\n          textTransform: 'uppercase',\n          fontWeight: 500,\n          letterSpacing: 0.5,\n          textAlign: 'start',\n          pb: 2,\n        }}\n      >\n        Find contacts by name\n      </Typography>\n      <TextField\n        size=\"small\"\n        placeholder=\"Enter name...\"\n        required\n        sx={{\n          backgroundColor: 'primary.contrastText',\n          color: 'primary.darker',\n          mb: 2,\n          borderRadius: 1,\n          width: '50%',\n        }}\n        type=\"text\"\n        value={filter}\n        onChange={e => {\n          dispatch(onChangeFilter(e.target.value));\n        }}\n      />\n    </div>\n  );\n};\n","import { Box, Typography } from '@mui/material';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/Contactlist';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operation';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box\n      sx={{\n        height: '100vh',\n        color: 'primary.darker',\n\n        background:\n          'linear-gradient(0deg, rgba(224,246,250,1) 42%, rgba(253,234,232,0.8015581232492998) 75%)',\n        p: 2,\n        opacity: 0.9,\n      }}\n    >\n      <Typography\n        component=\"h3\"\n        variant=\"h5\"\n        sx={{\n          color: 'primary.darker',\n          textTransform: 'uppercase',\n          fontWeight: 600,\n          textAlign: 'center',\n          pb: 2,\n        }}\n      >\n        Phonebook\n      </Typography>\n      <ContactForm />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <Typography\n        component=\"h3\"\n        variant=\"h5\"\n        sx={{\n          color: 'primary.darker',\n          textTransform: 'uppercase',\n          fontWeight: 600,\n          textAlign: 'center',\n          pb: 2,\n        }}\n      >\n        Contacts\n      </Typography>\n      <Filter />\n      <ContactList />\n    </Box>\n  );\n}\n"],"names":["selectIsLoading","state","contacts","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","items","selectContacts","trim","item","name","toLowerCase","includes","StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","Input","Field","_templateObject2","contactSchema","Yup","shape","min","max","required","number","ContactForm","useSelector","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","newContact","some","_ref","alert","concat","finalContact","_objectSpread","addContact","onAddContact","resetForm","children","_jsxs","htmlFor","placeholder","ErrorMessage","component","type","Button","variant","size","sx","backgroundColor","mb","width","_ref$contact","contact","id","Card","CardContent","Typography","color","fontWeight","textAlign","onClick","deleteContact","ContactItem","map","ContactCard","Filter","textTransform","letterSpacing","pb","TextField","borderRadius","value","onChange","e","onChangeFilter","target","Contacts","useEffect","fetchContacts","Box","height","background","p","opacity","ContactList"],"sourceRoot":""}